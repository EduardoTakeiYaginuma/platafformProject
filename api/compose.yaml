name: store

services:
  
  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-store}
      POSTGRES_USER: ${POSTGRES_USER:-store}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-store}
    volumes:
      - $VOLUME/postgres/store:/var/lib/postgresql/data
    # ports:
    #   - 5432:5432

  account:
    build:
      context: ./account-service
      dockerfile: Dockerfile
    environment:
      DATABASE_HOST: db
      DATABASE_USER: ${POSTGRES_USER:-store}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD:-store}
    depends_on:
      - db
    restart: always

  product:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    environment:
      DATABASE_HOST: db
      DATABASE_USER: ${POSTGRES_USER:-store}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD:-store}

  order:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    environment:
      DATABASE_HOST: db
      DATABASE_USER: ${POSTGRES_USER:-store}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD:-store}
    depends_on:
      - db


  auth:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    environment:
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-yrBBgYlvJQeslzFlgX9MFZccToI2fjRFqualquercoisa}



  exchange:
    build:
      context: ./exchange-service
      dockerfile: Dockerfile



  gateway:
    build:
      context: ./gateway-service
      dockerfile: Dockerfile
    environment:
      - LOGGING_LEVEL_STORE=${LOGGING_LEVEL_STORE:-debug}
    ports:
      - 8080:8080

  redis:
    image: redis:7
    restart: always
    hostname: redis
    ports:
      - 6379:6379
    volumes:
      - $VOLUME/redis:/data
    

  # exchange:
  #   build:
  #     context: ./exchange-service
  #     dockerfile: Dockerfile


  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    depends_on:
      - order  # ou outro serviço que já expõe /actuator/prometheus

  grafana:
    image: grafana/grafana
    ports:
      - 3000:3000
    volumes:
      - grafana-storage:/var/lib/grafana

volumes:
  grafana-storage: